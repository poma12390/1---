ORG     0x000 ;инициализация векторов прерываний
V0: WORD    $DEFAULT, 0x180
V1: WORD    $INT1, 0x180    ;Вектор прерываний для ВУ 1
V2: WORD    $INT2, 0x180    ;Вектор прерываний для ВУ 2
V3: WORD    $DEFAULT, 0x180 
V4: WORD    $DEFAULT, 0x180 
V5: WORD    $DEFAULT, 0x180 
V6: WORD    $DEFAULT, 0x180 
V7: WORD    $DEFAULT, 0x180 
ORG 0x020  
X:  WORD    0x0040  ;Переменная X
MIN: WORD   0xFFE1  ;Нижняя граница значений X
MAX: WORD   0x0020  ;Верхняя граница значений X
SUM: WORD 0x0000; 


DEFAULT:            ;Обработка прерывания по умолчанию
PUSH
IN 0
IN 6
IN 12
IN 16
IN 20
IN 24
IN 29
POP
IRET

START:  DI
    CLA
    OUT 0x1 ;запрет прерываний для неиспользуемых ВУ
    OUT 0x7
    OUT 0xB
    OUT 0xD
    OUT 0x11
    OUT 0x15
    OUT 0x19
    OUT 0x1D
    LD #0x9 ;загрузка в аккумулятор MR (1000|0001=1001)
    OUT 3 ;разрешение прерываний для 1 ВУ
    LD #0xA ;загрузка в аккумулятор MR (1000|0010=1010)
    OUT 5 ;разрешение прерываний для 2 ВУ
    EI

MAIN:   
    DI ;запрет прерываний чтобы обеспечить атомарность операции
    LD X
    DEC
    DEC
    CALL CHECK
    ST X
    HLT ; Проверить коррекность вычитания
    EI
    JUMP MAIN

INT2: ;обработка прерывания на ВУ-2
    NOP; Проверить правильность выполнения операции с ВУ-2
    IN 4
    SXTB
    ST SUM
    ADD SUM
    ADD SUM
    SUB X
    ST X
    CALL CHECK
    NOP; Проверить правильность выполнения операции с ВУ-2
    IRET

INT1: ;обработка прерывания на ВУ-1
NOP ; проверить проавильность операции с ВУ - 1
LD X
ASL
ASL
DEC
DEC
CALL CHECK
OUT 2
NOP ; проверить проавильность операции с ВУ - 1
IRET

CHECK:  ;Проверка принадлежности X к ОДЗ
CHECK_MIN:  
    CMP MIN ;если x > MIN переход на проверку верхней границы
    BPL CHECK_MAX   
    JUMP LD_MAX ;иначе загрузка MAX в аккумулятор
CHECK_MAX:  
    CMP MAX ;Проверка пересечения верхней границы X
    BMI RETURN  ;если x<MAX возврат
LD_MAX: 
    LD MAX ;Загрузка максимального значения в X  
    ST X
RETURN: RET ;Метка возврата из проверки на ОДЗ  
